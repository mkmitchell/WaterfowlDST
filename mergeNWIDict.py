"""
mergeNWIDict
===============
mergeNWIDict combines multiple geodatabase tables, saves them to a dictionary, and outputs a JSON file for use in the Waterfowl model.  This was created to
handle NWI crossover tables generated by USGS.
"""

import os, sys, getopt, datetime, logging, arcpy, re, json

def main(argv):
    """
    Runs mergeTable

    :param geodatabase: Geodatabase with tables.
    :type workspace: str
    :param wildcard: Wildcard is the beginning of all tables to be merged.  Example tables: [Q01, Q02, Q03]. Set wildcard to "Q*"
    :type geodatabase: str 
    """
    opts, args = getopt.getopt(argv,"g:w:",["geodatabase=", "wildcard="])
    gdb = ''
    for opt, arg in opts:
      if opt in ('-g', '--geodatabase'):
         gdb = arg
         arcpy.env.workspace = gdb
      elif opt in ("-w", "--wildcard"):
          wld = arg

    # Get and print a list of tables
    tables = arcpy.ListTables(wld)
    print(tables)
    tblDict = {}
    for table in tables:
        print(table)
        toClass = re.split("\w\w\w\w", table, 1)[1]
        if toClass not in tblDict:
            tblDict[toClass] = []
        cursor = arcpy.SearchCursor(table, fields='ATTRIBUTE')
        for row in cursor:
            tblDict[toClass].append(row.getValue('ATTRIBUTE'))

    print(tblDict.keys())
    json.dump( tblDict, open(os.path.join(os.path.dirname(gdb),"aoiWetland.json"), 'w' ))

    print('Done')

if __name__ == "__main__":
    print('\nRunning merge')
    print('#####################################\n')
    main(sys.argv[1:])    